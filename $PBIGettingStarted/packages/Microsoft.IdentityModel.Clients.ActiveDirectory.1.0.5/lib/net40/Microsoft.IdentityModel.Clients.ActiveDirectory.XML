<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.IdentityModel.Clients.ActiveDirectory</name>
    </assembly>
    <members>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext">
            <summary>
            The AuthenticationContext class retrieves authentication tokens from Azure Active Directory and ADFS services.
            </summary>
            <summary>
            The main class representing the authority issuing tokens for resources.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.QueryCache(System.String,System.String,System.String,System.String)">
            <summary>
            Queries all values in the cache that meet the passed in values, plus the 
            authority value that this AuthorizationContext was created with.  In every case passing
            null results in a wildcard evaluation.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String)">
            <summary>
            Constructor to create the context with the address of the authority.
            Using this constructor will turn ON validation of the authority URL by default if validation is supported for the authority address.
            </summary>
            <param name="authority">Address of the authority to issue token.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor to create the context with the address of the authority and flag to turn address validation off.
            Using this constructor, address validation can be turned off. Make sure you are aware of the security implication of not validating the address.
            </summary>
            <param name="authority">Address of the authority to issue token.</param>
            <param name="validateAuthority">Flag to turn address validation ON or OFF.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,System.Collections.Generic.IDictionary{Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey,System.String})">
            <summary>
            Constructor to create the context with the address of the authority.
            Using this constructor will turn ON validation of the authority URL by default if validation is supported for the authority address.
            </summary>
            <param name="authority">Address of the authority to issue token.</param>
            <param name="tokenCacheStore">Token Cache store used to lookup cached tokens on calls to AcquireToken</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey,System.String})">
            <summary>
            Constructor to create the context with the address of the authority and flag to turn address validation off.
            Using this constructor, address validation can be turned off. Make sure you are aware of the security implication of not validating the address.
            </summary>
            <param name="authority">Address of the authority to issue token.</param>
            <param name="validateAuthority">Flag to turn address validation ON or OFF.</param>
            <param name="tokenCacheStore">Token Cache store used to lookup cached tokens on calls to AcquireToken</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <returns>It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <returns>It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <returns>It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <returns>It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.IdentityProviderDescriptor)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource to get identity providers for.</param>
            <param name="identityProvider">The identity provider to federate with.</param>
            <returns>It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.GetProviders(System.String)">
            <summary>
            Gets list of identity providers from the service metadata endpoint
            </summary>
            <param name="resource">Identifier of the target resource to get identity providers for.</param>
            <returns>List of identity providers and their supported protocols.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="clientId">Identifier of the client requesting the token.</param>
            <param name="redirectUri">Address to return to upon receiving a response from the authority.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,System.String)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="clientId">Identifier of the client requesting the token.</param>
            <param name="redirectUri">Address to return to upon receiving a response from the authority.</param>
            <param name="userId">This parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user. This parameter can be null.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,System.String,System.String)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="clientId">Identifier of the client requesting the token.</param>
            <param name="redirectUri">Address to return to upon receiving a response from the authority.</param>
            <param name="userId">This parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user. This parameter can be null.</param>
            <param name="extraQueryParameters">This parameter will be appended as is to the query string in the HTTP authentication request to the authority. The parameter can be null.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="clientId">Identifier of the client requesting the token.</param>
            <param name="redirectUri">Address to return to upon receiving a response from the authority.</param>
            <param name="promptBehavior">If <see cref="F:Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always"/>, asks service to show user the authentication page which gives them chance to authenticate as a different user.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,System.String)">
            <summary>
            Acquires security token from the authority.
            </summary>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token.</param>
            <param name="clientId">Identifier of the client requesting the token.</param>
            <param name="redirectUri">Address to return to upon receiving a response from the authority.</param>
            <param name="promptBehavior">If <see cref="F:Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always"/>, asks service to show user the authentication page which gives them chance to authenticate as a different user.</param>
            <param name="extraQueryParameters">This parameter will be appended as is to the querystring in the HTTP autentication request to the authority. The parameter can be null.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)">
            <summary>
            Acquires security token from the authority using authorization code previously received.
            </summary>
            <param name="authorizationCode">The authorization code received from service authorization endpoint.</param>
            <param name="redirectUri">Address to return to upon receiving a response from the authority.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)">
            <summary>
            Acquires security token from the authority using an authorization code previously received.
            </summary>
            <param name="authorizationCode">The authorization code received from service authorization endpoint.</param>
            <param name="redirectUri">Address to return to upon receiving a response from the authority.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential)">
            <summary>
            Acquires security token from the authority using an authorization code previously received.
            </summary>
            <param name="authorizationCode">The authorization code received from service authorization endpoint.</param>
            <param name="redirectUri">The redirect address used for obtaining authorization code.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential,System.String)">
            <summary>
            Acquires security token from the authority using an authorization code previously received.
            </summary>
            <param name="authorizationCode">The authorization code received from service authorization endpoint.</param>
            <param name="redirectUri">The redirect address used for obtaining authorization code.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential)">
            <summary>
            Acquires security token from the authority using an authorization code previously received.
            </summary>
            <param name="authorizationCode">The authorization code received from service authorization endpoint.</param>
            <param name="redirectUri">The redirect address used for obtaining authorization code.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential,System.String)">
            <summary>
            Acquires security token from the authority using an authorization code previously received.
            </summary>
            <param name="authorizationCode">The authorization code received from service authorization endpoint.</param>
            <param name="redirectUri">The redirect address used for obtaining authorization code.</param>
            <param name="credential">The credential to use for token acquisition.</param>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String)">
            <summary>
            Acquires a security token from the authority using a Refresh Token previously received.
            </summary>
            <param name="refreshToken">Refresh Token to use in the refresh flow.</param>
            <param name="clientId">Name or ID of the client requesting the token.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,System.String)">
            <summary>
            Acquires a security token from the authority using a Refresh Token previously received.
            </summary>
            <param name="refreshToken">Refresh Token to use in the refresh flow.</param>
            <param name="clientId">Name or ID of the client requesting the token.</param>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.
            If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)">
            <summary>
            Acquires a security token from the authority using a Refresh Token previously received.
            </summary>
            <param name="refreshToken">Refresh Token to use in the refresh flow.</param>
            <param name="clientId">Name or ID of the client requesting the token.</param>
            <param name="credential">The credential used for token acquisition.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)">
            <summary>
            Acquires a security token from the authority using a Refresh Token previously received.
            </summary>
            <param name="refreshToken">Refresh Token to use in the refresh flow.</param>
            <param name="clientId">Name or ID of the client requesting the token.</param>
            <param name="credential">The credential used for token acquisition.</param>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.
            If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential)">
            <summary>
            Acquires a security token from the authority using a Refresh Token previously received.
            </summary>
            <param name="refreshToken">Refresh Token to use in the refresh flow.</param>
            <param name="clientId">Name or ID of the client requesting the token.</param>
            <param name="credential">The credential used for token acquisition.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential,System.String)">
            <summary>
            Acquires a security token from the authority using a Refresh Token previously received.
            </summary>
            <param name="refreshToken">Refresh Token to use in the refresh flow.</param>
            <param name="clientId">Name or ID of the client requesting the token.</param>
            <param name="credential">The credential used for token acquisition.</param>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.
            If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential)">
            <summary>
            Acquires a security token from the authority using a Refresh Token previously received.
            </summary>
            <param name="refreshToken">Refresh Token to use in the refresh flow.</param>
            <param name="clientId">Name or ID of the client requesting the token.</param>
            <param name="credential">The credential used for token acquisition.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential,System.String)">
            <summary>
            Acquires a security token from the authority using a Refresh Token previously received.
            </summary>
            <param name="refreshToken">Refresh Token to use in the refresh flow.</param>
            <param name="clientId">Name or ID of the client requesting the token.</param>
            <param name="credential">The credential used for token acquisition.</param>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.
            If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.</param>
            <returns>It contains Access Token, Refresh Token and the Access Token's expiration time.</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.TokenCacheStore">
            <summary>
            Gets the TokenCacheStore 
            </summary>
            <remarks>
            By default, TokenCacheStore is set to a Dictionary which makes the token cache an in-memory collection of key/value pairs. 
            Library will automatically save tokens in the cache when AcquireToken is called.  
            The default token cache is static so all tokens will available to all instances of AuthenticationContext. To use a custom TokenCacheStore pass one to the <see cref="T:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext">.constructor</see>.
            To turn OFF token caching, use the constructor and set TokenCacheStore to null.
            </remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.OwnerWindow">
            <summary>
            Gets or sets the owner of the browser dialog which pops up for receiving user credentials. It can be null.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationParameters">
            <summary>
            Contains authentication parameters based on unauthorized response from resource server.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationParameters.CreateFromResourceUrl(System.Uri)">
            <summary>
            Creates authentication parameters from address of the resource. This method expects the resource server to return unauthorized response
            with WWW-Authenticate header containing authentication parameters.
            </summary>
            <param name="resourceUrl">Address of the resource</param>
            <returns>AuthenticationParameters object containing authentication parameters</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationParameters.CreateFromUnauthorizedResponse(System.Net.HttpWebResponse)">
            <summary>
            Creates authentication parameters from the response received from the response received from the resource. This method expects the response to have unauthorized status and
            WWW-Authenticate header containing authentication parameters.</summary>
            <param name="response">Response received from the resource.</param>
            <returns>AuthenticationParameters object containing authentication parameters</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationParameters.CreateFromResponseAuthenticateHeader(System.String)">
            <summary>
            Creates authentication parameters from the WWW-Authenticate header in response received from resource. This method expects the header to contain authentication parameters in JSON format.
            </summary>
            <param name="authenticateHeader">Content of header WWW-Authenticate header</param>
            <returns>AuthenticationParameters object containing authentication parameters</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationParameters.Authority">
            <summary>
            Gets or sets the address of the authority to issue token.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationParameters.Resource">
            <summary>
            Gets or sets the identifier of the target resource that is the recipient of the requested token.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult">
            <summary>
            Contains the results of one token acquisition operation. 
            </summary>
            <summary>
            Contains the results of one token acquisition operation. 
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.CreateAuthorizationHeader">
            <summary>
            Creates authorization header from authentication result.
            </summary>
            <returns>Created authorization header</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.Deserialize(System.String)">
            <summary>
            Serializes the object to a JSON string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.Serialize">
            <summary>
            Serializes the object to a JSON string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.#ctor(System.String,System.String,System.String,System.DateTimeOffset)">
            <summary>
            Creates an result returned from AcquireToken. Except in advanced scenarios related to token caching, you do not need to create any instance of AuthenticationResult.
            </summary>
            <param name="accessTokenType">Type of the Access Token returned</param>
            <param name="accessToken">The Access Token requested</param>
            <param name="refreshToken">The Refresh Token associated with the requested Access Token</param>
            <param name="expiresOn">The point in time in which the Access Token returned in the AccessToken property ceases to be valid</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.AccessTokenType">
            <summary>
            Gets the type of the Access Token returned. 
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.AccessToken">
            <summary>
            Getse the Access Token requested.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.RefreshToken">
            <summary>
            Gets the Refresh Token associated with the requested Access Token. Note: not all operations will return a Refresh Token.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.ExpiresOn">
            <summary>
            Gets the point in time in which the Access Token returned in the AccessToken property ceases to be valid.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.TenantId">
            <summary>
            Gets an identifier for the tenant the token was acquired from. This property will be null if tenant information is not returned by the service.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.UserInfo">
            <summary>
            Gets user information including user Id. Some elements in UserInfo might be null if not returned by the service.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.IsMultipleResourceRefreshToken">
            <summary>
            Gets a value indicating whether the refresh token can be used for requesting access token for other resources.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential">
            <summary>
            Credential including client id and secret.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.ICredential">
            <summary>
            Interface used internally for passing various credential types around as well as adding common functionality.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential.#ctor(System.String,System.String)">
            <summary>
            Constructor to create credential with client id and secret
            </summary>
            <param name="ownerId">Identifier of the owner of the credential.</param>
            <param name="clientSecret">Secret of the client requesting the token.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential.#ctor(System.String,System.Security.SecureString)">
            <summary>
            Constructor to create credential with client id and secret. This constructor accepts client secret as SecureString.
            </summary>
            <param name="ownerId">Identifier of the owner of the credential.</param>
            <param name="secureClientSecret">Secret of the client requesting the token in form of SecureString.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential.CreateHash">
            <summary>
            Create hash from properties to be used for token caching
            </summary>
            <returns>Credential hash</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential.OwnerId">
            <summary>
            Gets an identifier for the owner of the credential.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError">
            <summary>
            Error code returned as a property in ActiveDirectoryAuthenticationException
            </summary>
            <summary>
            Error code returned as a property in ActiveDirectoryAuthenticationException
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.Unknown">
            <summary>
            Unknown error.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.InvalidArgument">
            <summary>
            Invalid argument.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.AuthenticationFailed">
            <summary>
            Authentication failed.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.AuthenticationCanceled">
            <summary>
            Authentication canceled.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.UnauthorizedResponseExpected">
            <summary>
            Unauthorized response expected from resource server.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.AuthorityNotInValidList">
            <summary>
            'authority' is not in the list of valid addresses.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.AssemblyLoadFailed">
            <summary>
            Loading required assembly failed.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.InvalidOwnerWindowType">
            <summary>
            Loading required assembly failed.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.MultipleTokensMatched">
            <summary>
            MultipleTokensMatched were matched.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.NetworkNotAvailable">
            <summary>
            The request could not be preformed because the network is down.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.AuthenticationUIFailed">
            <summary>
            The request could not be preformed because of an unknown failure in the UI flow.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.UserMismatch">
            <summary>
            User Mismatch.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.InvalidAuthorityType">
            <summary>
            Invalid authority type.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.InvalidCredentialType">
            <summary>
            Invalid credential type.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.InvalidServiceUrl">
            <summary>
            Invalid service URL.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.SymmetricKeySizeTooSmall">
            <summary>
            Symmetric key size too small.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.CertificateKeySizeTooSmall">
            <summary>
            Certificate key size too small.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.IdentityProtocolLoginUrlNull">
            <summary>
            Identity protocol login URL Null.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.IdentityProtocolMismatch">
            <summary>
            Identity protocol mismatch.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.EmailAddressSuffixMismatch">
            <summary>
            Email address suffix mismatch.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.IdentityProviderRequestFailed">
            <summary>
            Identity provider request failed.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.StsTokenRequestFailed">
            <summary>
            STS token request failed.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.EncodedTokenTooLong">
            <summary>
            Encoded token too long.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.ServiceReturnedError">
            <summary>
            Service returned error.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.StsMetadataRequestFailed">
            <summary>
            STS metadata request failed.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.NoDataFromSTS">
            <summary>
            No data from STS.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationError.UserInteractionRequired">
            <summary>
            One of two conditions was encountered.
            1. The PromptBehavior.Never flag was passed and but the constraint could not be honored 
               because user interaction was required.
            2. An error occurred during a silent web authentication that prevented the authentication
               flow from completing in a short enough time frame.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationErrorMessage">
            <summary>
            The active directory authentication error message.
            </summary>
            <summary>
            The active directory authentication error message.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.EncodingHelper">
            <summary>
            The encoding helper.
            </summary>
            <summary>
            The encoding helper.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior">
            <summary>
            Indicates whether AcquireToken should automotically prompt only if necessary or whether
            it should prompt regardless of whether there is a cached token.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Auto">
            <summary>
            Acquire token will prompt the user for credentials only when necessary.  If a token
            that meets the requirements is already cached then the user will not be prompted.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always">
            <summary>
            The user will be prompted for credentials even if there is a token that meets the requirements
            already in the cache.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Never">
            <summary>
            The user will not be prompted for credentials.  If prompting is necessary then the AcquireToken request
            will fail.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElement">
            <summary>
            ID of the elements which can be used in creating token cache key. Depending on the AcquireToken method used, different elements might be contained in a token cache key
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElement.Authority">
            <summary>
            Authority uri
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElement.Resource">
            <summary>
            Resource id
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElement.ClientId">
            <summary>
            Client id
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElement.CredentialHash">
            <summary>
            Hash created from credential passed to acquire token
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElement.IdentityProviderName">
            <summary>
            Name of the identity provider
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElement.User">
            <summary>
            User (in interactive flow, user can be passed as login_hint parameter)
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElements">
            <summary>
            Lists the elements which were used in creating token cache key. Depending on the AcquireToken method used, some properties may be null which means they were not included in the cache key.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElements.Authority">
            <summary>
            Authority
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElements.Resource">
            <summary>
            Resource
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElements.ClientId">
            <summary>
            Client Id
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElements.CredentialHash">
            <summary>
            Hash created from credential passed to acquire token
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElements.IdentityProviderName">
            <summary>
            Name of the identity provider
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElements.User">
            <summary>
            User (in interactive flow, user can be passed as login_hint parameter)
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheEncoding">
            <summary>
            Helper class to perform decoding and encoding operations on token cache keys and values
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheEncoding.DecodeCacheKey(System.String)">
            <summary>
            Decodes token cache key in form of a list of key elements 
            </summary>
            <param name="cacheKey">Token cache key</param>
            <returns>Key elements in form of a list of key/value pairs</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheEncoding.EncodeCacheKey(Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKeyElements)">
            <summary>
            Encodes token cache key elements to cache key 
            </summary>
            <param name="cacheKeyElements">Token cache key elements</param>
            <returns>Token cache key</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheEncoding.DecodeCacheValue(System.String)">
            <summary>
            Decodes token cache value in form of authentication result which is the output of AcquireToken
            </summary>
            <param name="cacheValue">Token cache value</param>
            <returns>Authentication result decoded from token cache value. Null if input is null.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheEncoding.EncodeCacheValue(Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult)">
            <summary>
            Encodes authentication result which is the output of AcquireToken in form of token cache value.
            </summary>
            <param name="result">Authentication result</param>
            <returns>Token cache value created by encoding authentication result</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey">
            <summary>
            <see cref="T:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey"/> can be used with linq to access items from the <see cref="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.TokenCacheStore"/>.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.#ctor(Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult)">
            <summary>
            Instantiates a key from a <see cref="T:Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult"/>, it can be null.
            </summary>
            <param name="result"></param>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.Authority">
            <summary>
            Gets or sets the Authority.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.ClientId">
            <summary>
            Gets or sets the ClientId.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.ExpiresOn">
            <summary>
            Gets or sets the Expiration.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.FamilyName">
            <summary>
            Gets or sets the FamilyName.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.GivenName">
            <summary>
            Gets or sets the GivenName.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.IdentityProviderName">
            <summary>
            Gets or sets the IdentityProviderName.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.IsMultipleResourceRefreshToken">
            <summary>
            Gets or sets a value indicating whether the RefreshToken applies to multiple resources.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.IsUserIdDisplayable">
            <summary>
            Gets or sets a value indicating whether the UserId is a displayable.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.Resource">
            <summary>
            Gets or sets the Resource.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.TenantId">
            <summary>
            Gets or sets the TenantId.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheKey.UserId">
            <summary>
            Gets or sets the UserId.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.UserInfo">
            <summary>
            Contains information of a single user. This information is used for token cache lookup. Also if created with userId, userId is sent to the service when login_hint is accepted.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.UserInfo.UserId">
            <summary>
            Identifier of the user authenticated during token acquision. 
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.UserInfo.IsUserIdDisplayable">
            <summary>
            Determines whether UserId is displayable or not.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.UserInfo.GivenName">
            <summary>
            Gets given name of the user if provided by the service. If not, the value is null. 
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.UserInfo.FamilyName">
            <summary>
            Gets family name of the user if provided by the service. If not, the value is null. 
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.UserInfo.IdentityProvider">
            <summary>
            Gets identity provider if returned by the service. If not, the value is null. 
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException">
            <summary>
            The exception type thrown when an error occurs during token acquisition.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException.#ctor">
            <summary>
             Initializes a new instance of the exception class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the exception class with a specified
             error code.
            </summary>
            <param name="errorCode">The error code returned by the service or generated by client. This is the code you can rely on for exception handling.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the exception class with a specified
             error code and error message.
            </summary>
            <param name="errorCode">The error code returned by the service or generated by client. This is the code you can rely on for exception handling.</param>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the exception class with a specified
             error code and a reference to the inner exception that is the cause of
             this exception.
            </summary>
            <param name="errorCode">The error code returned by the service or generated by client. This is the code you can rely on for exception handling.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified. It may especially contain the actual error message returned by the service.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException.#ctor(System.String,System.String,System.Exception)">
            <summary>
             Initializes a new instance of the exception class with a specified
             error code, error message and a reference to the inner exception that is the cause of
             this exception.
            </summary>
            <param name="errorCode">The error code returned by the service or generated by client. This is the code you can rely on for exception handling.</param>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified. It may especially contain the actual error message returned by the service.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception class with serialized data.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the System.Runtime.Serialization.SerializationInfo with information about the exception.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.ActiveDirectoryAuthenticationException.ErrorCode">
            <summary>
            The error code returned by the service or generated by client. This is the code you can rely on for exception handling.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential">
            <summary>
            Credential type containing an assertion of type "urn:ietf:params:oauth:token-type:jwt".
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential.#ctor(System.String)">
            <summary>
            Constructor to create credential with a jwt token encoded as a base64 url encoded string.
            </summary>
            <param name="assertion">The jwt used as credential.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential.CreateHash">
            <summary>
            Creates a hash from properties that is used for token caching.
            </summary>
            <returns>Credential hash</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential.Assertion">
            <summary>
            Gets the assertion.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.AssertionCredential.AssertionType">
            <summary>
            Gets the assertion type.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.IdentityProviderDescriptor">
            <summary>
            Class containing all properties returned for identity providers from service metadata.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.IdentityProviderDescriptor.Name">
            <summary>
            Gets or sets the human-readable display name for the identity provider.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.IdentityProviderDescriptor.LoginUrl">
            <summary>
            Gets or sets a constructed login request URL.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.IdentityProviderDescriptor.LogoutUrl">
            <summary>
            Gets or sets a URL that allows end users to sign out of the identity provider they signed in with.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.IdentityProviderDescriptor.ImageUrl">
            <summary>
            Gets or sets an image to display, as configured in the Management Portal. Blank if there is no image.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.IdentityProviderDescriptor.EmailAddressSuffixes">
            <summary>
            Gets or sets an array of email address suffixes associated with the identity provider. Returns an empty array if there are no suffixes configured.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.Internal.IWebUI">
            <summary>
            Interface for Authentication Dialog
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.Internal.IWebUI.Authenticate(System.Uri,System.Uri)">
            <summary>
            
            </summary>
            <param name="requestUri"></param>
            <param name="callbackUri"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.Internal.IWebUI.Authenticate(System.Uri)">
            <summary>
            
            </summary>
            <param name="requestUri"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.Internal.IWebUI.OwnerWindow">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.WebAuthenticationDialogFactory">
            <summary>
            This class loads the assembly containing the authentication dialog classes and creates a new instance of an IWebUI.
            This class is necessary since there is a loose coupling between this assembly and the assembly containing Windows Forms 
            dependencies.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential">
            <summary>
            Credential type containing symmetric key.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential.MinKeySizeInBits">
            <summary>
            Minimum symmetric key size in bits
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential.#ctor(System.String,System.Byte[])">
            <summary>
            Constructor to create credential with owner Id and symmetric key.
            </summary>
            <param name="ownerId">Identifier of the owner of the credential.</param>
            <param name="key">Symmetric key used as credential.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential.Finalize">
            <summary>
            Destructor method.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential.GetKey(System.Byte[])">
            <summary>
            Copy credential key to the array 
            </summary>
            <param name="outputKey">The array which the credential key is copied to. It should be the same size or larger than the credential key.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential.CreateHash">
            <summary>
            Create hash from properties to be used for token caching
            </summary>
            <returns>Credential hash</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential.OwnerId">
            <summary>
            Gets the id of the owner of the credential.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.SymmetricKeyCredential.Key">
            <summary>
            Gets the symmetric key used as credential.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential">
            <summary>
            Credential type containing X509 certificate.
            </summary>
        </member>
        <member name="F:Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential.MinKeySizeInBits">
            <summary>
            Minimum X509 certificate key size in bits
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Constructor to create credential with owner's Id and certificate.
            </summary>
            <param name="ownerId">Identifier of the owner of the credential.</param>
            <param name="certificate">The certificate used as credential.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential.CreateHash">
            <summary>
            Create hash from properties to be used for token caching
            </summary>
            <returns>Credential hash</returns>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential.OwnerId">
            <summary>
            Identifier of the owner of the credential.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.Clients.ActiveDirectory.X509CertificateCredential.Certificate">
            <summary>
            The certificate used as credential.
            </summary>
        </member>
    </members>
</doc>
